# meta developer: @yourusername
from .. import loader, utils

@loader.tds
class GetLinkSmartMod(loader.Module):
    """–£–º–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è tg://user —Å—Å—ã–ª–∫–∏: —Ä–µ–∞–ª—å–Ω–æ ‚Äî –µ—Å–ª–∏ –Ω–∏–∫/—Ä–µ–ø–ª–∞–π, –∏–Ω–∞—á–µ ‚Äî –∫–∞–∫ –µ—Å—Ç—å"""

    strings = {"name": "GetLinkSmart"}

    async def getlinkcmd(self, message):
        """[—Ä–µ–ø–ª–∞–π / @username / ID / —Ç–µ–∫—Å—Ç] ‚Äî tg://user:id..."""
        args = utils.get_args_raw(message)
        reply = await message.get_reply_message()

        # –ï—Å–ª–∏ —Ä–µ–ø–ª–∞–π ‚Äî –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å Entity
        if reply:
            user = await reply.get_sender()
            link = f"tg://user?id={user.id}"
            await utils.answer(message, f"üë§ –ü–†–û–§–ò–õ–¨: [–ü–†–û–§–ò–õ–¨]({link})")
            return

        # –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç ‚Äî @username (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å @)
        if args and args.strip().startswith("@"):
            try:
                user = await self._client.get_entity(args.strip())
                link = f"tg://user?id={user.id}"
                await utils.answer(message, f"üë§ –ü–†–û–§–ò–õ–¨: [–ü–†–û–§–ò–õ–¨]({link})")
            except Exception as e:
                await utils.answer(message, f"‚ùå –ù–µ –Ω–∞—à—ë–ª: {e}")
            return

        # –í—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –ø—Ä–æ—Å—Ç–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å—Å—ã–ª–∫—É "–∫–∞–∫ –µ—Å—Ç—å"
        if args:
            link = f"tg://user?id={args.strip()}"
            await utils.answer(message, f"üë§ –ü–†–û–§–ò–õ–¨: [–ü–†–û–§–ò–õ–¨]({link})")
            return

        await utils.answer(message, "‚úçÔ∏è –£–∫–∞–∂–∏ @—é–∑–µ—Ä–Ω–µ–π–º, –æ—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –≤–≤–µ–¥–∏ ID/—Ç–µ–∫—Å—Ç.")
