# meta developer: @tartaletkad
from .. import loader, utils

@loader.tds
class GetLinkSmartMod(loader.Module):
    """–£–º–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è tg://user —Å—Å—ã–ª–∫–∏"""

    strings = {"name": "GetLinkSmart"}

    async def getlinkcmd(self, message):
        """[—Ä–µ–ø–ª–∞–π/@username/ID/—Ç–µ–∫—Å—Ç] ‚Äî –≤—ã–¥–∞—Ç—å tg://user —Å—Å—ã–ª–∫—É"""
        args = utils.get_args_raw(message)
        reply = await message.get_reply_message()

        if reply:
            user = await reply.get_sender()
            link = f"tg://user?id={user.id}"
            await utils.answer(message, f"üë§ –ü–†–û–§–ò–õ–¨: {link}")
            return

        if args and args.strip().startswith("@"):
            try:
                user = await self._client.get_entity(args.strip())
                link = f"tg://user?id={user.id}"
                await utils.answer(message, f"üë§ –ü–†–û–§–ò–õ–¨: {link}")
            except Exception as e:
                await utils.answer(message, f"‚ùå –ù–µ –Ω–∞—à—ë–ª: {e}")
            return

        if args:
            link = f"tg://user?id={args.strip()}"
            await utils.answer(message, f"üë§ –ü–†–û–§–ò–õ–¨: {link}")
            return

        await utils.answer(message, "‚úçÔ∏è –£–∫–∞–∂–∏ @—é–∑–µ—Ä–Ω–µ–π–º, –æ—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –≤–≤–µ–¥–∏ ID/—Ç–µ–∫—Å—Ç.")
